{"ast":null,"code":"var _jsxFileName = \"D:\\\\Soham\\\\Courses\\\\Fullstackopen\\\\Fullstackopen_assignments\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 27\n}, this);\n\n_c = Title;\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: [\" \", text, \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 39\n}, this);\n\n_c2 = Button;\n\nconst Statistics = ({\n  text,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\" \", text, \" : \", value, \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 38\n}, this); //Parent component\n\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const goodClick = () => setGood(good + 1);\n\n  const neutralClick = () => setNeutral(neutral + 1);\n\n  const badClick = () => setBad(bad + 1);\n\n  const totalVal = () => setTotal({\n    total: good + bad + neutral\n  }); // const average= () => ()\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: goodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: neutralClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: badClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average: \", (good - bad) / total, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"postive: \", good / total * 100, \"% \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["D:/Soham/Courses/Fullstackopen/Fullstackopen_assignments/part1/unicafe/src/App.js"],"names":["React","useState","Title","title","Button","handleClick","text","Statistics","value","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","goodClick","neutralClick","badClick","totalVal"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\n\nconst Title =({title}) => <h2>{title}</h2>\n\nconst Button= ({handleClick,text}) => <button onClick={handleClick}> {text} </button>\n \nconst Statistics= ({text, value}) => <p> {text} : {value} </p>\n\n//Parent component\nconst App= () => {\n \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n\n  const goodClick = () => setGood(good +1);\n  const neutralClick = () => setNeutral(neutral +1);\n  const badClick = () => setBad(bad +1);\n  const totalVal = () => setTotal({total: good+bad+neutral});\n\n\n  // const average= () => ()\n\n  return (\n    <div>\n      <Title title='give feedback' />\n      <Button text='good' handleClick={goodClick}/>\n      <Button text='neutral' handleClick={neutralClick}/>\n      <Button text='bad' handleClick={badClick} />\n\n      <Title title='statistics' />\n      <Statistics text='good' value={good} />\n      <Statistics text='neutral' value={neutral} />\n      <Statistics text='bad' value={bad} />\n      <p>all: {total}</p>\n      <p>average: {(good-bad)/(total)} </p>\n      <p>postive: {good/(total)*100}% </p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}